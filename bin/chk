#!/bin/bash
#
#   "Check Status Of Your Jobs" Tool
#
#   Xiaoyu Wang (xwang224@buffalo.edu)
#   Dept. of Chem., State Univ. of New York at Buffalo
#   Jan. 2019
#
# ------ Version History ------
#   ver 1.0 (Jan 01 2019) Write a lot of things just for fun
#   ver 1.1 (Nov 22 2019) Add more options
#   ver 2.0 (Nov 24 2019) Rewrite the whole thing into function style

set -eu -o pipefail

# global variables specification
FILENAME='job.out'
FLAG=
REFORMAT_OUTPUT=true
OUTPUT_FORMAT="%s\t  %s\n"
COLUMN=0
HIDE_PATH=false

function usage() {
  printf '%s\n' \
    "Usage: chk [options]" \
    'Show the last line of files in current directory and all subdirectories' \
    'if the file name matches FILENAME.' \
    '' \
    "Options:" \
    '    -c COLUMN' \
    '        display only the given COLUMN' \
    '        note: this is achieved by awk so many tricks can be played.' \
    '        e.g. chk -c "1, \$3" will display both 1st and 3rd columns.'\
    '' \
    '    -f FILENAME' \
    '        FILENAME to check, default is "job.out"' \
    '' \
    '    -g FLAG' \
    '        grep last FLAG instead of show last line' \
    '' \
    '    -n' \
    '        do not reformat the output string' \
    '' \
    '    -s' \
    '        hide the path' \
    ''
}

function err() {
  printf "[${FUNCNAME[1]}] -> ERROR: $@" >&2
}

function format_output() {
  local len_path=-1
  local array=("$@")
  for x in "${array[@]}"; do
    [ "${#x}" -gt $len_path ] && len_path="${#x}"
  done
  local len_msg=$(expr $(tput cols) - $len_path - 2)
  OUTPUT_FORMAT="\033[34m%-${len_path}s\033[0m  %-${len_msg}.${len_msg}s\n"
}

function chk() {
  local target_files=($(find . -name "$FILENAME"))
  [ ${#target_files[@]} -eq 0 ] && {
    err "No such files in the directory: $FILENAME \n"
    exit 1
  }
  "$REFORMAT_OUTPUT" && format_output "${target_files[@]}"
  for x in "${target_files[@]}"; do
    if [ -z "$FLAG" ]; then
      info=$(tail -1 $x| awk "{print  $ $COLUMN}") 
    else
      info=$(grep "$FLAG" $x | tail -1 | awk "{print $ $COLUMN}")
    fi
    $HIDE_PATH && printf "$info\n" || {
      printf "$OUTPUT_FORMAT" "$(ls $x)" "$info"
    }
  done
}

while getopts "c:f:g:ns" opt; do
  case "$opt" in
    c) COLUMN="$OPTARG";;
    f) FILENAME="$OPTARG";;
    g) FLAG="$OPTARG";;
    n) REFORMAT_OUTPUT=false;;
    s) HIDE_PATH=true;;
    *) usage; exit 0;;
  esac
done

chk
